plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

apply plugin: 'com.alibaba.arouter'

def static getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

def isJenkins() {
    return project.hasProperty('IS_JENKINS') && IS_JENKINS == 'true'
}

android {
    compileSdkVersion project.compileSdkVersion

    signingConfigs {
        signingConfig {
            if (isJenkins()) {
                storeFile file('../../android19910914.keystore')
            } else {
                storeFile file('..\\keystore\\android19910914.keystore')
            }
            storePassword '19910914'
            keyAlias 'android.keystore'
            keyPassword '19910914'
        }
    }

    defaultConfig {
        applicationId "gov.anzong.androidnga"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        resConfigs "zh", "en"

        versionCode project.appVersionCode
        versionName project.appVersionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

        ndk {
            abiFilters 'arm64-v8a'
        }
        vectorDrawables {
            useSupportLibrary true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            minifyEnabled true
            proguardFiles 'proguard.cfg'
            zipAlignEnabled true
            signingConfig signingConfigs.signingConfig
        }
        debug {
            applicationIdSuffix '.debug'
            debuggable true
            minifyEnabled false
        }
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (outputFile != null && outputFileName.endsWith('.apk') && variant.buildType.name == "release") {
                outputFileName = "nga_phone_${defaultConfig.versionName}_${getDate()}.apk"
            }
        }
    }
}

repositories {
    flatDir { dirs 'libs' }
}

dependencies {
    implementation(name: 'floatingactionmenu', ext: 'aar')

    implementation "com.google.android.material:material:$androidxMaterial"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation 'commons-io:commons-io:2.11.0'

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    //butterKnife
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    kapt 'com.jakewharton:butterknife-compiler:10.2.1'

    //compose
    implementation 'androidx.activity:activity-compose:1.9.0'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation "androidx.compose.material:material:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"

    //glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation "com.squareup.retrofit2:retrofit-converters:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'
    implementation "com.alibaba:arouter-api:$arouter_version"
    annotationProcessor "com.alibaba:arouter-compiler:$arouter_version"
    kapt "com.alibaba:arouter-compiler:$arouter_version"
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.github.daniel-stoneuk:material-about-library:2.3.0'
    implementation project(':lib_base_common')
    implementation project(':lib_cloud')
    implementation project(':lib_core')
    implementation project(':lib_base_logger')

    implementation project(':lib_base_network')
    implementation project(':lib_core_data')
    implementation project(':lib_module_message')
    implementation project(':lib_base_service_api')
    implementation project(':lib_base_ui_compose')

    // database
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // kotlin
    implementation "androidx.core:core-ktx:$core_ktx_version"

    //noinspection KtxExtensionAvailable
    implementation "androidx.preference:preference:$preference_version"

    // paging
    implementation "androidx.paging:paging-compose:$paging_version"
}
